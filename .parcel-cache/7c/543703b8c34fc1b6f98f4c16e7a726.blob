function initData(){

}




// 2. 生成键盘
var keyboard = document.getElementById("keyboard")

// 遍历keys，生成kbd标签。
for(var index = 0; index < keys.length; index += 1){
    // index 0 1 2 3 4 5
 
    // console.log(row)

    var div = tag("div",{className:'row'})

    keyboard.appendChild(div)
    
       // row 代表第 1 2 3 4 5个数组
       var row = keys[index]
        for(var index2 = 0; index2 < row.length; index2 += 1){

                // 给按键添加一个编辑按钮
                var button = createButton('edit',row[index2])
 
                // 添加网址icon图标
                var imgIcon = createImgIcon(hash[row[index2]])
        
                // 创建kbd标签
                var kbd = tag('kbd',{className: 'key',textContent: row[index2]})
                kbd.appendChild(imgIcon)
                kbd.appendChild(button)
                div.appendChild(kbd)    
        
    } 
}


// 3. 监听键盘
document.onkeypress = function(e){
    // 监听键盘按下的按键
        var key = e['key'] // qwertyuiop[]\
        var website = hash[key]
        console.log(website)
        // 将当前浏览器页面地址换成我们按下按键对应的地址
        // 模拟用户在地址栏输入
        // location.href = 'http://' + website
        //在浏览器新页面窗口打开我们按下按键对应的网址
        // 模拟用户新打开一个浏览器页面
        window.open('http://' + website, '_blank')
}

// 工具函数 位置不重要 默认会在代码前面

// 从localStorage中拿hash数据
function getFromLocalStorage(name){
    return JSON.parse(localStorage.getItem(name) || 'null')
 }
// 创建标签
function tag(tagName, attributes){
    var element = document.createElement(tagName)
    // for in 循环可以遍历一个hash 为啥不用for循环 因为你不知道attributes里面具体有什么 有多少
    for(var key in attributes){// key 为className，id，textContent 就是xx.后边的内容
        element[key] = attributes[key]

    }
    return element
 }

// 创建ImgIcon
function createImgIcon(domain){
     // 创建img标签
    var imgIcon = tag('img')
    if(domain){
        imgIcon.src = 'http://' + domain + '/favicon.ico'
    }else{
        imgIcon.src = '//i.bmp.ovh/imgs/2021/05/4871781e4fa1f4d3.jpg'
        console.log('上面图片一定成功，如果失败说明图挂了。')
    }
    imgIcon.onerror = function(e){
        console.log("下载失败了,帮你添加一个肯定成功的favicon.ico,地址为https://i.bmp.ovh/imgs/2021/05/4871781e4fa1f4d3.jpg")
        e.target.src = '//i.bmp.ovh/imgs/2021/05/4871781e4fa1f4d3.jpg'
    }
    return imgIcon
}
function createButton(textName,id){
    // 给按键添加一个按钮
    var button = tag('button',{textContent: textName,id: id})
    button.onclick = function(e){
        // 用户输入的键 e[target]就是用户点击的元素
        var button =  e.target
        var key = button.id
        // 就是在用户点击button的时候重新获取imgIconNew图片地址
        var imgIconNew = button.previousSibling
        var userWebsiteEdit = prompt('请输入您想输入的网址')
        // 将用户输入的网址存入对应的hash中去
        hash[key] = userWebsiteEdit // hash 变更
        imgIconNew.src = 'http://' + userWebsiteEdit + '/favicon.ico'
        imgIconNew.onerror = function(e){
            console.log("下载失败了,帮你添加一个肯定成功的favicon.ico,地址为https://i.bmp.ovh/imgs/2021/05/4871781e4fa1f4d3.jpg")
            e.target.src = '//i.bmp.ovh/imgs/2021/05/4871781e4fa1f4d3.jpg'
        }

        // 只要用户修改website 就将修改后的hash存入'userWebsiteEdit'保存
        // 由于这个方法只接受参数是string所以将hash转换成字符串存入
        localStorage.setItem('userWebsiteEdit',JSON.stringify(hash))
        // console.log(hash);
    }
    return button
}